################################################## 
# ConversionTrackerService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from ConversionTrackerService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class ConversionTrackerServiceLocator:
    ConversionTrackerServiceInterface_address = "https://adwords.google.com:443/api/adwords/cm/v201101/ConversionTrackerService"
    def getConversionTrackerServiceInterfaceAddress(self):
        return ConversionTrackerServiceLocator.ConversionTrackerServiceInterface_address
    def getConversionTrackerServiceInterface(self, url=None, **kw):
        return ConversionTrackerServiceSoapBindingSOAP(url or ConversionTrackerServiceLocator.ConversionTrackerServiceInterface_address, **kw)

# Methods
class ConversionTrackerServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # get: getConversionTracker
    def getConversionTracker(self, request):
        if isinstance(request, getConversionTrackerRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getConversionTrackerResponse.typecode)
        return response

    # mutate: getConversionTracker
    def mutateConversionTracker(self, request):
        if isinstance(request, mutateConversionTrackerRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(mutateConversionTrackerResponse.typecode)
        return response

getConversionTrackerRequest = ns0.getConversionTracker_Dec().pyclass

getConversionTrackerResponse = ns0.getConversionTrackerResponse_Dec().pyclass

mutateConversionTrackerRequest = ns0.mutateConversionTracker_Dec().pyclass

mutateConversionTrackerResponse = ns0.mutateConversionTrackerResponse_Dec().pyclass
