################################################## 
# CampaignAdExtensionService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from CampaignAdExtensionService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class CampaignAdExtensionServiceLocator:
    CampaignAdExtensionServiceInterface_address = "https://adwords.google.com:443/api/adwords/cm/v200909/CampaignAdExtensionService"
    def getCampaignAdExtensionServiceInterfaceAddress(self):
        return CampaignAdExtensionServiceLocator.CampaignAdExtensionServiceInterface_address
    def getCampaignAdExtensionServiceInterface(self, url=None, **kw):
        return CampaignAdExtensionServiceSoapBindingSOAP(url or CampaignAdExtensionServiceLocator.CampaignAdExtensionServiceInterface_address, **kw)

# Methods
class CampaignAdExtensionServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # get: getCampaignAdExtension
    def getCampaignAdExtension(self, request):
        if isinstance(request, getCampaignAdExtensionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getCampaignAdExtensionResponse.typecode)
        return response

    # mutate: getCampaignAdExtension
    def mutateCampaignAdExtension(self, request):
        if isinstance(request, mutateCampaignAdExtensionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(mutateCampaignAdExtensionResponse.typecode)
        return response

getCampaignAdExtensionRequest = ns0.getCampaignAdExtension_Dec().pyclass

getCampaignAdExtensionResponse = ns0.getCampaignAdExtensionResponse_Dec().pyclass

mutateCampaignAdExtensionRequest = ns0.mutateCampaignAdExtension_Dec().pyclass

mutateCampaignAdExtensionResponse = ns0.mutateCampaignAdExtensionResponse_Dec().pyclass
