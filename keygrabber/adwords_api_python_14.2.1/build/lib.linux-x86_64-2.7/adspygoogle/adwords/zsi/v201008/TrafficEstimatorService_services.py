################################################## 
# TrafficEstimatorService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from TrafficEstimatorService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class TrafficEstimatorServiceLocator:
    TrafficEstimatorServiceInterface_address = "https://adwords.google.com:443/api/adwords/o/v201008/TrafficEstimatorService"
    def getTrafficEstimatorServiceInterfaceAddress(self):
        return TrafficEstimatorServiceLocator.TrafficEstimatorServiceInterface_address
    def getTrafficEstimatorServiceInterface(self, url=None, **kw):
        return TrafficEstimatorServiceSoapBindingSOAP(url or TrafficEstimatorServiceLocator.TrafficEstimatorServiceInterface_address, **kw)

# Methods
class TrafficEstimatorServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # get: getTrafficEstimator
    def getTrafficEstimator(self, request):
        if isinstance(request, getTrafficEstimatorRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getTrafficEstimatorResponse.typecode)
        return response

getTrafficEstimatorRequest = ns1.getTrafficEstimator_Dec().pyclass

getTrafficEstimatorResponse = ns1.getTrafficEstimatorResponse_Dec().pyclass
