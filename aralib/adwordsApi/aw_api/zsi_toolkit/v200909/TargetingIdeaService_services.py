################################################## 
# TargetingIdeaService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from TargetingIdeaService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class TargetingIdeaServiceLocator:
    TargetingIdeaServiceInterface_address = "https://adwords.google.com:443/api/adwords/o/v200909/TargetingIdeaService"
    def getTargetingIdeaServiceInterfaceAddress(self):
        return TargetingIdeaServiceLocator.TargetingIdeaServiceInterface_address
    def getTargetingIdeaServiceInterface(self, url=None, **kw):
        return TargetingIdeaServiceSoapBindingSOAP(url or TargetingIdeaServiceLocator.TargetingIdeaServiceInterface_address, **kw)

# Methods
class TargetingIdeaServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # get: getTargetingIdea
    def getTargetingIdea(self, request):
        if isinstance(request, getTargetingIdeaRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getTargetingIdeaResponse.typecode)
        return response

    # get: getTargetingIdeaBulkKeywordIdeas
    def getBulkKeywordIdeas(self, request):
        if isinstance(request, getBulkKeywordIdeasRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getBulkKeywordIdeasResponse.typecode)
        return response

getTargetingIdeaRequest = ns1.getTargetingIdea_Dec().pyclass

getTargetingIdeaResponse = ns1.getTargetingIdeaResponse_Dec().pyclass

getBulkKeywordIdeasRequest = ns1.getBulkKeywordIdeas_Dec().pyclass

getBulkKeywordIdeasResponse = ns1.getBulkKeywordIdeasResponse_Dec().pyclass
